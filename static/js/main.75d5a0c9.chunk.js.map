{"version":3,"sources":["components/HomeComponent.js","components/NavBar.js","components/Model.js","components/One.js","App.js","reportWebVitals.js","index.js"],"names":["Rig","useFrame","state","camera","position","x","THREE","lerp","mouse","y","Box","useBox","mass","ref","api","onClick","velocity","set","attach","color","Plane","usePlane","rotation","Math","PI","args","HomeComponent","props","className","Container","shadows","OrbitControls","Stars","intensity","angle","receiveShadow","transparent","opacity","NavBar","Navbar","variant","Brand","href","Nav","Link","Model","pose","useRef","useGLTF","animations","materials","scene","clone","useMemo","SkeletonUtils","nodes","useGraph","texture","useTexture","useAnimations","actions","names","useState","hovered","setHovered","index","setIndex","useSpring","scale","useEffect","document","body","style","cursor","reset","fadeIn","play","fadeOut","dispose","onPointerOver","onPointerOut","length","object","mixamorigHips","castShadow","geometry","stacy","skeleton","map","skinning","mesh","meshStandardMaterial","One","fov","fallback","preload","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.75d5a0c9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Container, Navbar, Nav, Col, Row, Table, CardGroup, Card } from 'react-bootstrap';\r\nimport * as THREE from \"three\"\r\n\r\nimport { Canvas, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls, Stars } from \"@react-three/drei\";\r\nimport { Physics, usePlane, useBox } from \"use-cannon\";\r\n\r\n\r\nfunction Rig() {\r\n    return useFrame((state) => {\r\n      state.camera.position.x = THREE.MathUtils.lerp(state.camera.position.x, 1.5 + state.mouse.x / 4, 0.075)\r\n      state.camera.position.y = THREE.MathUtils.lerp(state.camera.position.y, 1.5 + state.mouse.y / 4, 0.075)\r\n    })\r\n  }\r\n\r\nfunction Box() {\r\n    const [ref, api] = useBox(() => ({ mass: 1, position: [0, 2, 0] }));\r\n    return (\r\n      <mesh\r\n        onClick={() => {\r\n          api.velocity.set(0, 2, 0);\r\n        }}\r\n        ref={ref}\r\n        position={[0, 2, 0]}\r\n      >\r\n        <boxBufferGeometry attach=\"geometry\" />\r\n        <meshLambertMaterial attach=\"material\" color=\"hotpink\" />\r\n      </mesh>\r\n    );\r\n  }\r\n  \r\n  function Plane() {\r\n    const [ref] = usePlane(() => ({\r\n      rotation: [-Math.PI / 2, 0, 0],\r\n    }));\r\n    return (\r\n      <mesh ref={ref} rotation={[-Math.PI / 2, 0, 0]}>\r\n        <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\r\n        <meshLambertMaterial attach=\"material\" color=\"lightblue\" />\r\n      </mesh>\r\n    );\r\n  }\r\n\r\n\r\n\r\nfunction HomeComponent(props) {\r\n    return (\r\n        <div className=\"home\">\r\n            <Container>\r\n                <Canvas shadows>\r\n                    <OrbitControls />\r\n                    <Stars />\r\n                    <ambientLight intensity={0.5} />\r\n                    <spotLight position={[10, 15, 10]} angle={0.3} />\r\n                    <Physics>\r\n                        <Box />\r\n                        <Plane />\r\n                    </Physics>\r\n                    <mesh rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -1, 0]} receiveShadow>\r\n                        <planeBufferGeometry args={[10, 10, 1, 1]} />\r\n                        <shadowMaterial transparent opacity={0.2} />\r\n                    </mesh>\r\n                    <Rig />\r\n                </Canvas>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeComponent;","import { Container, Navbar, Nav, Col, Row } from 'react-bootstrap';\r\n\r\nimport './../App.css';\r\n\r\n\r\nfunction NavBar() {\r\n\r\n    return(\r\n      <div className=\"nav-bar\">\r\n          <Navbar className=\"nav\" variant=\"light\">\r\n            <Container>\r\n            <Navbar.Brand href=\"#/\">\r\n              Home\r\n            </Navbar.Brand>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"#one\">3D Model</Nav.Link>\r\n              <Nav.Link href=\"#aboutus\">About Us</Nav.Link>\r\n              <Nav.Link href=\"#contactus\">Contact Us</Nav.Link>\r\n            </Nav>\r\n            </Container>\r\n          </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default NavBar; \r\n","\r\nimport React, { useRef, useEffect, useState, useMemo } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei/useGLTF\";\r\n\r\nimport { useAnimations } from \"@react-three/drei/useAnimations\";\r\nimport { useTexture } from \"@react-three/drei/useTexture\";\r\n\r\nimport { a, useSpring } from \"@react-spring/three\";\r\nimport { useGraph } from \"react-three-fiber\";\r\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils\"\r\n\r\n\r\nexport default function Model({ pose, ...props }) {\r\n  const group = useRef();\r\n  const { materials, animations, scene } = useGLTF('https://raw.githubusercontent.com/kambleaa007/NewDimension/main/public/stacy.glb');\r\n\r\n  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene])\r\n  const { nodes } = useGraph(clone)\r\n\r\n  const texture = useTexture(\"https://raw.githubusercontent.com/kambleaa007/NewDimension/main/public/stacy.jpg\")\r\n  // Extract animation actions\r\n  const { ref, actions, names } = useAnimations(animations)\r\n  // Hover and animation-index states\r\n  const [hovered, setHovered] = useState(false)\r\n  const [index, setIndex] = useState(pose)\r\n  // Animate the selection halo\r\n  const { color, scale } = useSpring({ scale: hovered ? [1.15, 1.15, 1] : [1, 1, 1], color: hovered ? \"hotpink\" : \"aquamarine\" })\r\n  // Change cursor on hover-state\r\n  useEffect(() => void (document.body.style.cursor = hovered ? \"pointer\" : \"auto\"), [hovered])\r\n  // Change animation when the index changes\r\n  useEffect(() => {\r\n    // Reset and fade in animation after an index has been changed\r\n    actions[names[index]].reset().fadeIn(0.5).play()\r\n    // In the clean-up phase, fade it out\r\n    return () => actions[names[index]].fadeOut(0.5)\r\n  }, [index, actions, names])\r\n  return (\r\n    <group ref={ref} {...props} dispose={null}>\r\n      <group\r\n        onPointerOver={() => setHovered(true)}\r\n        onPointerOut={() => setHovered(false)}\r\n        onClick={() => setIndex((index + 1) % names.length)}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n        scale={[0.01, 0.01, 0.01]}>\r\n        <primitive object={nodes.mixamorigHips} />\r\n        <skinnedMesh\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.stacy.geometry}\r\n          skeleton={nodes.stacy.skeleton}\r\n          rotation={[-Math.PI / 2, 0, 0]}\r\n          scale={[100, 100, 100]}>\r\n          <meshStandardMaterial map={texture} map-flipY={false} skinning />\r\n        </skinnedMesh>\r\n      </group>\r\n      <a.mesh receiveShadow position={[0, 1, -1]} scale={scale}>\r\n        <circleBufferGeometry args={[0.6, 64]} />\r\n        <a.meshStandardMaterial color={color} />\r\n      </a.mesh>\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload('https://raw.githubusercontent.com/kambleaa007/NewDimension/main/public/stacy.glb');\r\n","\r\nimport React, { Suspense } from \"react\";\r\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\"\r\nimport * as THREE from \"three\"\r\n\r\nimport { Physics, usePlane, useBox, useSphere } from \"use-cannon\";\r\nimport { OrbitControls } from \"@react-three/drei/OrbitControls\";\r\n\r\nimport Model from \"./Model\";\r\n\r\n\r\nfunction Rig() {\r\n  return useFrame((state) => {\r\n    state.camera.position.x = THREE.MathUtils.lerp(state.camera.position.x, 1.5 + state.mouse.x / 4, 0.075)\r\n    state.camera.position.y = THREE.MathUtils.lerp(state.camera.position.y, 1.5 + state.mouse.y / 4, 0.075)\r\n  })\r\n}\r\n\r\nexport default function One() {\r\n   \r\n\r\n\r\n  return (\r\n\r\n<Canvas shadows camera={{ position: [1, 1.5, 2.5], fov: 50 }}>\r\n      <ambientLight />\r\n      <directionalLight position={[-5, 5, 5]} castShadow shadow-mapSize-width={1024} shadow-mapSize-height={1024} />\r\n      <group position={[0, -1, 0]}>\r\n        <Suspense fallback={null}>\r\n          <Model pose={4} position={[0, 0, 0]} />\r\n          <Model pose={1} position={[2, 0, -1]} />\r\n          <Model pose={2} position={[-2, 0, -1]} />\r\n        </Suspense>\r\n      </group>\r\n      <mesh rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -1, 0]} receiveShadow>\r\n        <planeBufferGeometry args={[10, 10, 1, 1]} />\r\n        <shadowMaterial transparent opacity={0.2} />\r\n      </mesh>\r\n      <Rig />\r\n    </Canvas>\r\n\r\n  )\r\n}\r\n","import { HashRouter, BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Container, Navbar, Nav, Col, Row } from 'react-bootstrap';\n\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport HomeComponent from './components/HomeComponent';\nimport NavBar from './components/NavBar';\nimport One from './components/One';\n\nfunction App() {\n  return (\n    <HashRouter>\n    <Container>\n      <NavBar />\n      <Switch>\n        <Route path=\"/\" exact component= { (props) => ( <HomeComponent  /> )} />\n        <Route path=\"/one\" component={(props) => ( <One /> )} />             \n      </Switch>\n    </Container>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}