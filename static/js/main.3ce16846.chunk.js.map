{"version":3,"sources":["components/HomeComponent.js","components/NavBar.js","components/Model.js","components/One.js","components/Effects.js","components/AboutUs.js","components/Text.js","resources/ping.mp3","resources/cross.jpg","components/ContactUs.js","App.js","reportWebVitals.js","index.js"],"names":["Rig","useFrame","state","camera","position","x","THREE","lerp","mouse","y","Box","useBox","mass","ref","api","onClick","velocity","set","castShadow","receiveShadow","attach","color","roughness","metalness","Plane","usePlane","rotation","Math","PI","args","softShadows","HomeComponent","props","className","Container","shadows","OrbitControls","Stars","intensity","angle","transparent","opacity","NavBar","Navbar","variant","Brand","href","Nav","Link","Model","pose","useRef","useGLTF","animations","materials","scene","clone","useMemo","SkeletonUtils","nodes","useGraph","texture","useTexture","useAnimations","actions","names","useState","hovered","setHovered","index","setIndex","useSpring","scale","useEffect","document","body","style","cursor","reset","fadeIn","play","fadeOut","dispose","onPointerOver","onPointerOut","length","object","mixamorigHips","geometry","stacy","skeleton","map","skinning","mesh","meshStandardMaterial","One","Row","fov","fallback","preload","extend","EffectComposer","ShaderPass","SavePass","RenderPass","triColorMix","uniforms","tDiffuse1","value","tDiffuse2","tDiffuse3","vertexShader","fragmentShader","Effects","composer","savePass","blendPass","swap","useThree","gl","size","rtA","width","height","rtB","current","setSize","delay1","delay2","renderTarget","render","pixelRatio","getPixelRatio","attachArray","needsSwap","FXAAShader","CopyShader","roundedSquareWave","t","delta","a","f","atan","sin","Dots","vec","transform","positions","Array","_","i","floor","random","right","distances","pos","cos","angleTo","clock","dist","elapsedTime","wave","copy","multiplyScalar","setPosition","setMatrixAt","instanceMatrix","needsUpdate","AboutUs","orthographic","zoom","colorManagement","fullscreen","font","parse","fontJson","geom","number","Text","children","array","char","parseInt","ping","Audio","pingSound","create","count","welcome","pong","currentTime","volume","clamp","useStore","Paddle","useLoader","GLTFLoader","model","type","onCollide","e","contact","impactVelocity","values","toString","Bone","Bone003","Bone006","Bone010","material","glove","arm","wood","side","mesh_1","foam","mesh_2","lower","mesh_3","upper","mesh_4","Ball","earthImg","useSphere","ContactGround","ContactUs","useCallback","penumbra","iterations","tolerance","defaultContactMaterial","friction","restitution","contactEquationStiffness","contactEquationRelaxation","frictionEquationStiffness","frictionEquationRelaxation","gravity","allowSleep","display","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3ce16846.chunk.js","sourcesContent":["import React, {useRef} from 'react'\r\nimport { Container, Navbar, Nav, Col, Row, Table, CardGroup, Card } from 'react-bootstrap';\r\nimport * as THREE from \"three\"\r\n\r\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\r\nimport { OrbitControls, Stars, softShadows } from \"@react-three/drei\";\r\nimport { Physics, usePlane, useBox } from \"use-cannon\";\r\n\r\nsoftShadows();\r\n\r\nfunction Rig() {\r\n    return useFrame((state) => {\r\n      state.camera.position.x = THREE.MathUtils.lerp(state.camera.position.x, 1.5 + state.mouse.x / 4, 0.075)\r\n      state.camera.position.y = THREE.MathUtils.lerp(state.camera.position.y, 1.5 + state.mouse.y / 4, 0.075)\r\n    })\r\n  }\r\n\r\nfunction Box() {\r\n    const [ref, api] = useBox(() => ({ mass: 1, position: [0, 2, 0] }));\r\n\r\n    return (\r\n      <mesh\r\n        onClick={() => {\r\n          api.velocity.set(0, 4, 2);\r\n        }}        \r\n        ref={ref}\r\n        position={[0, 2, 0]} castShadow receiveShadow\r\n      >\r\n        <boxBufferGeometry attach=\"geometry\" />\r\n        <meshStandardMaterial attach=\"material\" color=\"hotpink\" roughness={0} metalness={0.1}  />\r\n      </mesh>\r\n    );\r\n  }\r\n  \r\n  function Plane() {\r\n    const [ref] = usePlane(() => ({\r\n      rotation: [-Math.PI / 2, 0, 0],\r\n    }));\r\n    return (\r\n      <mesh ref={ref} rotation={[-Math.PI / 2, 0, 0]} castShadow receiveShadow>\r\n        <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\r\n        <meshLambertMaterial attach=\"material\" color=\"lightblue\" />\r\n      </mesh>\r\n    );\r\n  }\r\n\r\n\r\n\r\nfunction HomeComponent(props) {\r\n    return (\r\n        <div className=\"home\">\r\n            <Container>\r\n                <Canvas shadows>\r\n                    <OrbitControls />\r\n                    <Stars />\r\n                    <fog attach=\"fog\" args={[\"grey\", 0, 40]} />\r\n                    <ambientLight intensity={0.4} />\r\n                    <spotLight position={[10, 15, 10]} angle={0.3} />\r\n                    <directionalLight position={[0, 2, 0]} intensity={1} />\r\n                    <directionalLight position={[2, 0, 0]} intensity={0.5} />\r\n                    <directionalLight position={[0, 0, 2]} intensity={0.2} />\r\n                    <Physics>\r\n                        <Box />\r\n                        <Plane />\r\n                    </Physics>\r\n                    <mesh rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -1, 0]} receiveShadow>\r\n                        <planeBufferGeometry args={[10, 10, 1, 1]} />\r\n                        <shadowMaterial transparent opacity={0.2} />\r\n                    </mesh>\r\n                    <Rig />\r\n                </Canvas>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeComponent;","import { Container, Navbar, Nav, Col, Row } from 'react-bootstrap';\r\n\r\nimport './../App.css';\r\n\r\n\r\nfunction NavBar() {\r\n\r\n    return(\r\n      <div className=\"nav-bar\">\r\n          <Navbar className=\"nav\" variant=\"light\">\r\n            <Container>\r\n            <Navbar.Brand href=\"#/\">\r\n              Home\r\n            </Navbar.Brand>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"#one\">3D Model</Nav.Link>\r\n              <Nav.Link href=\"#aboutus\">Universe</Nav.Link>\r\n              <Nav.Link href=\"#contactus\">Play PingPong</Nav.Link>\r\n            </Nav>\r\n            </Container>\r\n          </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default NavBar; \r\n","\r\nimport React, { useRef, useEffect, useState, useMemo } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei/useGLTF\";\r\n\r\nimport { useAnimations } from \"@react-three/drei/useAnimations\";\r\nimport { useTexture } from \"@react-three/drei/useTexture\";\r\n\r\nimport { a, useSpring } from \"@react-spring/three\";\r\nimport { useGraph } from \"react-three-fiber\";\r\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils\"\r\n\r\n\r\nexport default function Model({ pose, ...props }) {\r\n  const group = useRef();\r\n  const { materials, animations, scene } = useGLTF('https://raw.githubusercontent.com/kambleaa007/NewDimension/main/public/stacy.glb');\r\n\r\n  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene])\r\n  const { nodes } = useGraph(clone)\r\n\r\n  const texture = useTexture(\"https://raw.githubusercontent.com/kambleaa007/NewDimension/main/public/stacy.jpg\")\r\n  // Extract animation actions\r\n  const { ref, actions, names } = useAnimations(animations)\r\n  // Hover and animation-index states\r\n  const [hovered, setHovered] = useState(false)\r\n  const [index, setIndex] = useState(pose)\r\n  // Animate the selection halo\r\n  const { color, scale } = useSpring({ scale: hovered ? [1.15, 1.15, 1] : [1, 1, 1], color: hovered ? \"hotpink\" : \"aquamarine\" })\r\n  // Change cursor on hover-state\r\n  useEffect(() => void (document.body.style.cursor = hovered ? \"pointer\" : \"auto\"), [hovered])\r\n  // Change animation when the index changes\r\n  useEffect(() => {\r\n    // Reset and fade in animation after an index has been changed\r\n    actions[names[index]].reset().fadeIn(0.5).play()\r\n    // In the clean-up phase, fade it out\r\n    return () => actions[names[index]].fadeOut(0.5)\r\n  }, [index, actions, names])\r\n  return (\r\n    <group ref={ref} {...props} dispose={null}>\r\n      <group\r\n        onPointerOver={() => setHovered(true)}\r\n        onPointerOut={() => setHovered(false)}\r\n        onClick={() => setIndex((index + 1) % names.length)}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n        scale={[0.01, 0.01, 0.01]}>\r\n        <primitive object={nodes.mixamorigHips} />\r\n        <skinnedMesh\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.stacy.geometry}\r\n          skeleton={nodes.stacy.skeleton}\r\n          rotation={[-Math.PI / 2, 0, 0]}\r\n          scale={[100, 100, 100]}>\r\n          <meshStandardMaterial map={texture} map-flipY={false} skinning />\r\n        </skinnedMesh>\r\n      </group>\r\n      <a.mesh receiveShadow position={[0, 1, -1]} scale={scale}>\r\n        <circleBufferGeometry args={[0.6, 64]} />\r\n        <a.meshStandardMaterial color={color} />\r\n      </a.mesh>\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload('https://raw.githubusercontent.com/kambleaa007/NewDimension/main/public/stacy.glb');\r\n","\r\nimport React, { Suspense } from \"react\";\r\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\"\r\nimport * as THREE from \"three\"\r\nimport { Container, Row } from 'react-bootstrap';\r\n\r\nimport { Physics, usePlane, useBox, useSphere } from \"use-cannon\";\r\nimport { OrbitControls } from \"@react-three/drei/OrbitControls\";\r\n\r\nimport Model from \"./Model\";\r\n\r\n\r\nfunction Rig() {\r\n  return useFrame((state) => {\r\n    state.camera.position.x = THREE.MathUtils.lerp(state.camera.position.x, 1.5 + state.mouse.x / 4, 0.075)\r\n    state.camera.position.y = THREE.MathUtils.lerp(state.camera.position.y, 1.5 + state.mouse.y / 4, 0.075)\r\n  })\r\n}\r\n\r\nexport default function One() {\r\n   \r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        Click on model\r\n      </Row>\r\n      <Canvas shadows camera={{ position: [1, 1.5, 2.5], fov: 50 }}>\r\n        <ambientLight />\r\n        <directionalLight position={[-5, 5, 5]} castShadow shadow-mapSize-width={1024} shadow-mapSize-height={1024} />\r\n        <group position={[0, -1, 0]}>\r\n          <Suspense fallback={null}>\r\n            <Model pose={4} position={[0, 0, 0]} />\r\n            <Model pose={1} position={[2, 0, -1]} />\r\n            <Model pose={2} position={[-2, 0, -1]} />\r\n          </Suspense>\r\n        </group>\r\n        <mesh rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -1, 0]} receiveShadow>\r\n          <planeBufferGeometry args={[10, 10, 1, 1]} />\r\n          <shadowMaterial transparent opacity={0.2} />\r\n        </mesh>\r\n        <Rig />\r\n      </Canvas>\r\n    </Container>\r\n\r\n    \r\n\r\n  )\r\n}\r\n","import * as THREE from 'three'\r\nimport React, { useMemo, useEffect, useRef } from 'react'\r\nimport { useThree, useFrame, extend } from 'react-three-fiber'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\r\nimport { SavePass } from 'three/examples/jsm/postprocessing/SavePass'\r\nimport { CopyShader } from 'three/examples/jsm/shaders/CopyShader'\r\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\n\r\nextend({ EffectComposer, ShaderPass, SavePass, RenderPass })\r\n\r\n// Shader that composites the r,g,b channels of 3 textures, respectively\r\nconst triColorMix = {\r\n  uniforms: {\r\n    tDiffuse1: { value: null },\r\n    tDiffuse2: { value: null },\r\n    tDiffuse3: { value: null }\r\n  },\r\n  vertexShader: `\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);\r\n    }\r\n  `,\r\n  fragmentShader: `\r\n    varying vec2 vUv;\r\n    uniform sampler2D tDiffuse1;\r\n    uniform sampler2D tDiffuse2;\r\n    uniform sampler2D tDiffuse3;\r\n    \r\n    void main() {\r\n      vec4 del0 = texture2D(tDiffuse1, vUv);\r\n      vec4 del1 = texture2D(tDiffuse2, vUv);\r\n      vec4 del2 = texture2D(tDiffuse3, vUv);\r\n      float alpha = min(min(del0.a, del1.a), del2.a);\r\n      gl_FragColor = vec4(del0.r, del1.g, del2.b, alpha);\r\n    }\r\n  `\r\n}\r\n\r\nexport function Effects() {\r\n  const composer = useRef()\r\n  const savePass = useRef()\r\n  const blendPass = useRef()\r\n  const swap = useRef(false) // Whether to swap the delay buffers\r\n  const { scene, gl, size, camera } = useThree()\r\n  const { rtA, rtB } = useMemo(() => {\r\n    const rtA = new THREE.WebGLRenderTarget(size.width, size.height)\r\n    const rtB = new THREE.WebGLRenderTarget(size.width, size.height)\r\n    return { rtA, rtB }\r\n  }, [size])\r\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\r\n  useFrame(() => {\r\n    // Swap render targets and update dependencies\r\n    let delay1 = swap.current ? rtB : rtA\r\n    let delay2 = swap.current ? rtA : rtB\r\n    savePass.current.renderTarget = delay2\r\n    blendPass.current.uniforms['tDiffuse2'].value = delay1.texture\r\n    blendPass.current.uniforms['tDiffuse3'].value = delay2.texture\r\n    swap.current = !swap.current\r\n    composer.current.render()\r\n  }, 1)\r\n  const pixelRatio = gl.getPixelRatio()\r\n  return (\r\n    <effectComposer ref={composer} args={[gl]}>\r\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\r\n      <shaderPass attachArray=\"passes\" ref={blendPass} args={[triColorMix, 'tDiffuse1']} needsSwap={false} />\r\n      <savePass attachArray=\"passes\" ref={savePass} needsSwap={true} />\r\n      <shaderPass\r\n        attachArray=\"passes\"\r\n        args={[FXAAShader]}\r\n        uniforms-resolution-value-x={1 / (size.width * pixelRatio)}\r\n        uniforms-resolution-value-y={1 / (size.height * pixelRatio)}\r\n      />\r\n      <shaderPass attachArray=\"passes\" args={[CopyShader]} />\r\n    </effectComposer>\r\n  )\r\n}\r\n","import React, { useMemo, useRef } from 'react'\r\nimport { Canvas, useFrame } from 'react-three-fiber'\r\nimport { HTML } from \"@react-three/drei\";\r\nimport { Effects } from './Effects'\r\nimport * as THREE from 'three'\r\nimport './../App.css';\r\n\r\nconst roundedSquareWave = (t, delta, a, f) => {\r\n  return ((2 * a) / Math.PI) * Math.atan(Math.sin(2 * Math.PI * t * f) / delta)\r\n}\r\n\r\nfunction Dots() {\r\n  const ref = useRef()\r\n  const { vec, transform, positions, distances } = useMemo(() => {\r\n    const vec = new THREE.Vector3()\r\n    const transform = new THREE.Matrix4()\r\n\r\n    // Precompute randomized initial positions\r\n    const positions = [...Array(10000)].map((_, i) => {\r\n      const position = new THREE.Vector3()\r\n      // Place in a grid\r\n      position.x = (i % 100) - 50\r\n      position.y = Math.floor(i / 100) - 50\r\n\r\n      // Offset every other column (hexagonal pattern)\r\n      position.y += (i % 2) * 0.5\r\n\r\n      // Add some noise\r\n      position.x += Math.random() * 0.3\r\n      position.y += Math.random() * 0.3\r\n      return position\r\n    })\r\n\r\n    // Precompute initial distances with octagonal offset\r\n    const right = new THREE.Vector3(1, 0, 0)\r\n    const distances = positions.map((pos) => {\r\n      return pos.length() + Math.cos(pos.angleTo(right) * 8) * 0.5\r\n    })\r\n    return { vec, transform, positions, distances }\r\n  }, [])\r\n  useFrame(({ clock }) => {\r\n    for (let i = 0; i < 10000; ++i) {\r\n      const dist = distances[i]\r\n\r\n      // Distance affects the wave phase\r\n      const t = clock.elapsedTime - dist / 25\r\n\r\n      // Oscillates between -0.4 and +0.4\r\n      const wave = roundedSquareWave(t, 0.15 + (0.2 * dist) / 72, 0.4, 1 / 3.8)\r\n\r\n      // Scale initial position by our oscillator\r\n      vec.copy(positions[i]).multiplyScalar(wave + 1.3)\r\n\r\n      // Apply the Vector3 to a Matrix4\r\n      transform.setPosition(vec)\r\n\r\n      // Update Matrix4 for this instance\r\n      ref.current.setMatrixAt(i, transform)\r\n    }\r\n    ref.current.instanceMatrix.needsUpdate = true\r\n  })\r\n  return (\r\n    <instancedMesh ref={ref} args={[null, null, 10000]}>\r\n      <circleBufferGeometry args={[0.15]} />\r\n      <meshBasicMaterial />\r\n    </instancedMesh>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction AboutUs() {\r\n    return (\r\n      <Canvas orthographic camera={{ zoom: 20 }} colorManagement={false}>\r\n        <color attach=\"background\" args={['black']} />\r\n        <group position={[25,-12,0]}>\r\n        <Effects />        \r\n        <HTML fullscreen>\r\n            <h1 style={{\"color\":\"white\"}}>Universe</h1>\r\n        </HTML>\r\n        </group>\r\n        <Dots />\r\n      </Canvas>\r\n    )\r\n  }\r\n  \r\n  export default AboutUs;\r\n\r\n","import * as THREE from \"three\"\r\nimport React, { useMemo } from \"react\"\r\nimport fontJson from \"./../resources/firasans_regular.json\"\r\n\r\nconst font = new THREE.FontLoader().parse(fontJson)\r\nconst geom = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].map(number => new THREE.TextGeometry(number, { font, size: 5, height: 0.1 }))\r\n\r\nexport default function Text({ color, children, ...props }) {\r\n  const array = useMemo(() => [...children], [children])\r\n  return (\r\n    <group {...props} dispose={null}>\r\n      {array.map((char, index) => (\r\n        <mesh position={[-(array.length / 2) * 3.5 + index * 3.5, 0, 0]} key={index} geometry={geom[parseInt(char)]}>\r\n          <meshBasicMaterial attach=\"material\" color={color} transparent opacity={0.5} />\r\n        </mesh>\r\n      ))}\r\n    </group>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ping.a0246f13.mp3\";","export default __webpack_public_path__ + \"static/media/cross.ff426a15.jpg\";","\r\n// react-three-fiber is a way to express threejs declaratively: https://github.com/react-spring/react-three-fiber\r\nimport { Canvas, useFrame, useLoader } from \"@react-three/fiber\"\r\n// use-cannon is a hook around the cannon.js physics library: https://github.com/react-spring/use-cannon\r\nimport { Physics, useSphere, useBox, usePlane } from \"@react-three/cannon\"\r\n// zustand is a minimal state-manager: https://github.com/react-spring/zustand\r\nimport create from \"zustand\"\r\n\r\nimport * as THREE from \"three\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport React, { Suspense, useRef, useCallback } from \"react\"\r\nimport lerp from \"lerp\"\r\nimport clamp from \"lodash-es/clamp\"\r\nimport Text from \"./Text\"\r\nimport pingSound from \"./../resources/ping.mp3\"\r\nimport earthImg from \"./../resources/cross.jpg\"\r\n\r\n// Create a store ...\r\nconst ping = new Audio(pingSound)\r\nconst [useStore] = create((set) => ({\r\n  count: 0,\r\n  welcome: true,\r\n  api: {\r\n    pong(velocity) {\r\n      ping.currentTime = 0\r\n      ping.volume = clamp(velocity / 20, 0, 1)\r\n      ping.play()\r\n      if (velocity > 4) set((state) => ({ count: state.count + 1 }))\r\n    },\r\n    reset: (welcome) => set((state) => ({ welcome, count: welcome ? state.count : 0 })),\r\n  },\r\n}))\r\n\r\n// The paddle was made in blender and auto-converted to JSX by https://github.com/react-spring/gltfjsx\r\nfunction Paddle() {\r\n  // Load the gltf file\r\n  const { nodes, materials } = useLoader(GLTFLoader, \"https://raw.githubusercontent.com/kambleaa007/NewDimension/main/public/pingpong.glb\")\r\n  // Fetch some reactive state\r\n  const { pong } = useStore((state) => state.api)\r\n  const welcome = useStore((state) => state.welcome)\r\n  const count = useStore((state) => state.count)\r\n  const model = useRef()\r\n  // Make it a physical object that adheres to gravitation and impact\r\n  const [ref, api] = useBox(() => ({ type: \"Kinematic\", args: [3.4, 1, 3.5], onCollide: (e) => pong(e.contact.impactVelocity) }))\r\n  // use-frame allows the component to subscribe to the render-loop for frame-based actions\r\n  let values = useRef([0, 0])\r\n  useFrame((state) => {\r\n    // The paddle is kinematic (not subject to gravitation), we move it with the api returned by useBox\r\n    values.current[0] = lerp(values.current[0], (state.mouse.x * Math.PI) / 5, 0.2)\r\n    values.current[1] = lerp(values.current[1], (state.mouse.x * Math.PI) / 5, 0.2)\r\n    api.position.set(state.mouse.x * 10, state.mouse.y * 5, 0)\r\n    api.rotation.set(0, 0, values.current[1])\r\n    // Left/right mouse movement rotates it a liitle for effect only\r\n    model.current.rotation.x = lerp(model.current.rotation.x, welcome ? Math.PI / 2 : 0, 0.2)\r\n    model.current.rotation.y = values.current[0]\r\n  })\r\n  return (\r\n    <mesh ref={ref} dispose={null}>\r\n      <group ref={model} position={[-0.05, 0.37, 0.3]} scale={[0.15, 0.15, 0.15]}>\r\n        <Text rotation={[-Math.PI / 2, 0, 0]} position={[0, 1, 2]} size={1} children={count.toString()} />\r\n        <group rotation={[1.88, -0.35, 2.32]} scale={[2.97, 2.97, 2.97]}>\r\n          <primitive object={nodes.Bone} />\r\n          <primitive object={nodes.Bone003} />\r\n          <primitive object={nodes.Bone006} />\r\n          <primitive object={nodes.Bone010} />\r\n          <skinnedMesh castShadow receiveShadow material={materials.glove} material-roughness={1} geometry={nodes.arm.geometry} skeleton={nodes.arm.skeleton} />\r\n        </group>\r\n        <group rotation={[0, -0.04, 0]} scale={[141.94, 141.94, 141.94]}>\r\n          <mesh castShadow receiveShadow material={materials.wood} geometry={nodes.mesh.geometry} />\r\n          <mesh castShadow receiveShadow material={materials.side} geometry={nodes.mesh_1.geometry} />\r\n          <mesh castShadow receiveShadow material={materials.foam} geometry={nodes.mesh_2.geometry} />\r\n          <mesh castShadow receiveShadow material={materials.lower} geometry={nodes.mesh_3.geometry} />\r\n          <mesh castShadow receiveShadow material={materials.upper} geometry={nodes.mesh_4.geometry} />\r\n        </group>\r\n      </group>\r\n    </mesh>\r\n  )\r\n}\r\n\r\nfunction Ball() {\r\n  // Load texture (the black plus sign)\r\n  const map = useLoader(THREE.TextureLoader, earthImg)\r\n  // Make the ball a physics object with a low mass\r\n  const [ref] = useSphere(() => ({ mass: 1, args: 0.5, position: [0, 5, 0] }))\r\n  return (\r\n    <mesh castShadow ref={ref}>\r\n      <sphereBufferGeometry attach=\"geometry\" args={[0.5, 64, 64]} />\r\n      <meshStandardMaterial attach=\"material\" map={map} />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nfunction ContactGround() {\r\n  // When the ground was hit we reset the game ...\r\n  const { reset } = useStore((state) => state.api)\r\n  const [ref] = usePlane(() => ({ type: \"Static\", rotation: [-Math.PI / 2, 0, 0], position: [0, -10, 0], onCollide: () => reset(true) }))\r\n  return <mesh ref={ref} />\r\n}\r\n\r\nfunction ContactUs() {\r\n  const welcome = useStore((state) => state.welcome)\r\n  const { reset } = useStore((state) => state.api)\r\n  const onClick = useCallback(() => welcome && reset(false), [welcome, reset])\r\n  return (\r\n    <div onClick={onClick}>\r\n      <Canvas shadows camera={{ position: [0, 5, 12], fov: 50 }}>\r\n        <color attach=\"background\" args={[\"#171720\"]} />\r\n        <ambientLight intensity={0.5} />\r\n        <pointLight position={[-10, -10, -10]} />\r\n        <spotLight\r\n          position={[10, 10, 10]}\r\n          angle={0.4}\r\n          penumbra={1}\r\n          intensity={1}\r\n          castShadow\r\n          shadow-mapSize-width={2048}\r\n          shadow-mapSize-height={2048}\r\n          shadow-bias={-0.0001}\r\n        />\r\n        <Physics\r\n          iterations={20}\r\n          tolerance={0.0001}\r\n          defaultContactMaterial={{\r\n            friction: 0.9,\r\n            restitution: 0.7,\r\n            contactEquationStiffness: 1e7,\r\n            contactEquationRelaxation: 1,\r\n            frictionEquationStiffness: 1e7,\r\n            frictionEquationRelaxation: 2,\r\n          }}\r\n          gravity={[0, -40, 0]}\r\n          allowSleep={false}>\r\n          <mesh position={[0, 0, -10]} receiveShadow>\r\n            <planeBufferGeometry attach=\"geometry\" args={[1000, 1000]} />\r\n            <meshPhongMaterial attach=\"material\" color=\"#374037\" />\r\n          </mesh>\r\n          <ContactGround />\r\n          {!welcome && <Ball />}\r\n          <Suspense fallback={null}>\r\n            <Paddle />\r\n          </Suspense>\r\n        </Physics>\r\n      </Canvas>\r\n      <div className=\"startup\" style={{ display: welcome ? \"block\" : \"none\" }}>\r\n        * click to start ...\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ContactUs;","import { HashRouter, BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Container, Navbar, Nav, Col, Row } from 'react-bootstrap';\n\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport HomeComponent from './components/HomeComponent';\nimport NavBar from './components/NavBar';\nimport One from './components/One';\nimport AboutUs from './components/AboutUs';\nimport ContactUs from './components/ContactUs';\n\nfunction App() {\n  return (\n    <HashRouter>\n    <Container>\n      <NavBar />\n      <Switch>\n        <Route path=\"/\" exact component= { (props) => ( <HomeComponent  /> )} />\n        <Route path=\"/one\" component={(props) => ( <One /> )} />     \n        <Route path=\"/aboutus\" component={(props) => ( <AboutUs /> )} />   \n        <Route path=\"/contactus\" component={(props) => ( <ContactUs /> )} />        \n      </Switch>\n    </Container>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}