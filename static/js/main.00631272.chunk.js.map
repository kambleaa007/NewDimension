{"version":3,"sources":["components/HomeComponent.js","components/NavBar.js","components/Model.js","components/One.js","components/Effects.js","components/AboutUs.js","App.js","reportWebVitals.js","index.js"],"names":["Rig","useFrame","state","camera","position","x","THREE","lerp","mouse","y","Box","useBox","mass","ref","api","onClick","velocity","set","castShadow","receiveShadow","attach","color","roughness","metalness","Plane","usePlane","rotation","Math","PI","args","softShadows","HomeComponent","props","className","Container","shadows","OrbitControls","Stars","intensity","angle","transparent","opacity","NavBar","Navbar","variant","Brand","href","Nav","Link","Model","pose","useRef","useGLTF","animations","materials","scene","clone","useMemo","SkeletonUtils","nodes","useGraph","texture","useTexture","useAnimations","actions","names","useState","hovered","setHovered","index","setIndex","useSpring","scale","useEffect","document","body","style","cursor","reset","fadeIn","play","fadeOut","dispose","onPointerOver","onPointerOut","length","object","mixamorigHips","geometry","stacy","skeleton","map","skinning","mesh","meshStandardMaterial","One","Row","fov","fallback","preload","extend","EffectComposer","ShaderPass","SavePass","RenderPass","triColorMix","uniforms","tDiffuse1","value","tDiffuse2","tDiffuse3","vertexShader","fragmentShader","Effects","composer","savePass","blendPass","swap","useThree","gl","size","rtA","width","height","rtB","current","setSize","delay1","delay2","renderTarget","render","pixelRatio","getPixelRatio","attachArray","needsSwap","FXAAShader","CopyShader","roundedSquareWave","t","delta","a","f","atan","sin","Dots","vec","transform","positions","Array","_","i","floor","random","right","distances","pos","cos","angleTo","clock","dist","elapsedTime","wave","copy","multiplyScalar","setPosition","setMatrixAt","instanceMatrix","needsUpdate","AboutUs","orthographic","zoom","colorManagement","fullscreen","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00631272.chunk.js","sourcesContent":["import React, {useRef} from 'react'\r\nimport { Container, Navbar, Nav, Col, Row, Table, CardGroup, Card } from 'react-bootstrap';\r\nimport * as THREE from \"three\"\r\n\r\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\r\nimport { OrbitControls, Stars, softShadows } from \"@react-three/drei\";\r\nimport { Physics, usePlane, useBox } from \"use-cannon\";\r\n\r\nsoftShadows();\r\n\r\nfunction Rig() {\r\n    return useFrame((state) => {\r\n      state.camera.position.x = THREE.MathUtils.lerp(state.camera.position.x, 1.5 + state.mouse.x / 4, 0.075)\r\n      state.camera.position.y = THREE.MathUtils.lerp(state.camera.position.y, 1.5 + state.mouse.y / 4, 0.075)\r\n    })\r\n  }\r\n\r\nfunction Box() {\r\n    const [ref, api] = useBox(() => ({ mass: 1, position: [0, 2, 0] }));\r\n\r\n    return (\r\n      <mesh\r\n        onClick={() => {\r\n          api.velocity.set(0, 4, 2);\r\n        }}        \r\n        ref={ref}\r\n        position={[0, 2, 0]} castShadow receiveShadow\r\n      >\r\n        <boxBufferGeometry attach=\"geometry\" />\r\n        <meshStandardMaterial attach=\"material\" color=\"hotpink\" roughness={0} metalness={0.1}  />\r\n      </mesh>\r\n    );\r\n  }\r\n  \r\n  function Plane() {\r\n    const [ref] = usePlane(() => ({\r\n      rotation: [-Math.PI / 2, 0, 0],\r\n    }));\r\n    return (\r\n      <mesh ref={ref} rotation={[-Math.PI / 2, 0, 0]} castShadow receiveShadow>\r\n        <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\r\n        <meshLambertMaterial attach=\"material\" color=\"lightblue\" />\r\n      </mesh>\r\n    );\r\n  }\r\n\r\n\r\n\r\nfunction HomeComponent(props) {\r\n    return (\r\n        <div className=\"home\">\r\n            <Container>\r\n                <Canvas shadows>\r\n                    <OrbitControls />\r\n                    <Stars />\r\n                    <fog attach=\"fog\" args={[\"grey\", 0, 40]} />\r\n                    <ambientLight intensity={0.4} />\r\n                    <spotLight position={[10, 15, 10]} angle={0.3} />\r\n                    <directionalLight position={[0, 2, 0]} intensity={1} />\r\n                    <directionalLight position={[2, 0, 0]} intensity={0.5} />\r\n                    <directionalLight position={[0, 0, 2]} intensity={0.2} />\r\n                    <Physics>\r\n                        <Box />\r\n                        <Plane />\r\n                    </Physics>\r\n                    <mesh rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -1, 0]} receiveShadow>\r\n                        <planeBufferGeometry args={[10, 10, 1, 1]} />\r\n                        <shadowMaterial transparent opacity={0.2} />\r\n                    </mesh>\r\n                    <Rig />\r\n                </Canvas>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeComponent;","import { Container, Navbar, Nav, Col, Row } from 'react-bootstrap';\r\n\r\nimport './../App.css';\r\n\r\n\r\nfunction NavBar() {\r\n\r\n    return(\r\n      <div className=\"nav-bar\">\r\n          <Navbar className=\"nav\" variant=\"light\">\r\n            <Container>\r\n            <Navbar.Brand href=\"#/\">\r\n              Home\r\n            </Navbar.Brand>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"#one\">3D Model</Nav.Link>\r\n              <Nav.Link href=\"#aboutus\">About Us</Nav.Link>\r\n              <Nav.Link href=\"#contactus\">Contact Us</Nav.Link>\r\n            </Nav>\r\n            </Container>\r\n          </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default NavBar; \r\n","\r\nimport React, { useRef, useEffect, useState, useMemo } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei/useGLTF\";\r\n\r\nimport { useAnimations } from \"@react-three/drei/useAnimations\";\r\nimport { useTexture } from \"@react-three/drei/useTexture\";\r\n\r\nimport { a, useSpring } from \"@react-spring/three\";\r\nimport { useGraph } from \"react-three-fiber\";\r\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils\"\r\n\r\n\r\nexport default function Model({ pose, ...props }) {\r\n  const group = useRef();\r\n  const { materials, animations, scene } = useGLTF('https://raw.githubusercontent.com/kambleaa007/NewDimension/main/public/stacy.glb');\r\n\r\n  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene])\r\n  const { nodes } = useGraph(clone)\r\n\r\n  const texture = useTexture(\"https://raw.githubusercontent.com/kambleaa007/NewDimension/main/public/stacy.jpg\")\r\n  // Extract animation actions\r\n  const { ref, actions, names } = useAnimations(animations)\r\n  // Hover and animation-index states\r\n  const [hovered, setHovered] = useState(false)\r\n  const [index, setIndex] = useState(pose)\r\n  // Animate the selection halo\r\n  const { color, scale } = useSpring({ scale: hovered ? [1.15, 1.15, 1] : [1, 1, 1], color: hovered ? \"hotpink\" : \"aquamarine\" })\r\n  // Change cursor on hover-state\r\n  useEffect(() => void (document.body.style.cursor = hovered ? \"pointer\" : \"auto\"), [hovered])\r\n  // Change animation when the index changes\r\n  useEffect(() => {\r\n    // Reset and fade in animation after an index has been changed\r\n    actions[names[index]].reset().fadeIn(0.5).play()\r\n    // In the clean-up phase, fade it out\r\n    return () => actions[names[index]].fadeOut(0.5)\r\n  }, [index, actions, names])\r\n  return (\r\n    <group ref={ref} {...props} dispose={null}>\r\n      <group\r\n        onPointerOver={() => setHovered(true)}\r\n        onPointerOut={() => setHovered(false)}\r\n        onClick={() => setIndex((index + 1) % names.length)}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n        scale={[0.01, 0.01, 0.01]}>\r\n        <primitive object={nodes.mixamorigHips} />\r\n        <skinnedMesh\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.stacy.geometry}\r\n          skeleton={nodes.stacy.skeleton}\r\n          rotation={[-Math.PI / 2, 0, 0]}\r\n          scale={[100, 100, 100]}>\r\n          <meshStandardMaterial map={texture} map-flipY={false} skinning />\r\n        </skinnedMesh>\r\n      </group>\r\n      <a.mesh receiveShadow position={[0, 1, -1]} scale={scale}>\r\n        <circleBufferGeometry args={[0.6, 64]} />\r\n        <a.meshStandardMaterial color={color} />\r\n      </a.mesh>\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload('https://raw.githubusercontent.com/kambleaa007/NewDimension/main/public/stacy.glb');\r\n","\r\nimport React, { Suspense } from \"react\";\r\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\"\r\nimport * as THREE from \"three\"\r\nimport { Container, Row } from 'react-bootstrap';\r\n\r\nimport { Physics, usePlane, useBox, useSphere } from \"use-cannon\";\r\nimport { OrbitControls } from \"@react-three/drei/OrbitControls\";\r\n\r\nimport Model from \"./Model\";\r\n\r\n\r\nfunction Rig() {\r\n  return useFrame((state) => {\r\n    state.camera.position.x = THREE.MathUtils.lerp(state.camera.position.x, 1.5 + state.mouse.x / 4, 0.075)\r\n    state.camera.position.y = THREE.MathUtils.lerp(state.camera.position.y, 1.5 + state.mouse.y / 4, 0.075)\r\n  })\r\n}\r\n\r\nexport default function One() {\r\n   \r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        Click on model\r\n      </Row>\r\n      <Canvas shadows camera={{ position: [1, 1.5, 2.5], fov: 50 }}>\r\n        <ambientLight />\r\n        <directionalLight position={[-5, 5, 5]} castShadow shadow-mapSize-width={1024} shadow-mapSize-height={1024} />\r\n        <group position={[0, -1, 0]}>\r\n          <Suspense fallback={null}>\r\n            <Model pose={4} position={[0, 0, 0]} />\r\n            <Model pose={1} position={[2, 0, -1]} />\r\n            <Model pose={2} position={[-2, 0, -1]} />\r\n          </Suspense>\r\n        </group>\r\n        <mesh rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -1, 0]} receiveShadow>\r\n          <planeBufferGeometry args={[10, 10, 1, 1]} />\r\n          <shadowMaterial transparent opacity={0.2} />\r\n        </mesh>\r\n        <Rig />\r\n      </Canvas>\r\n    </Container>\r\n\r\n    \r\n\r\n  )\r\n}\r\n","import * as THREE from 'three'\r\nimport React, { useMemo, useEffect, useRef } from 'react'\r\nimport { useThree, useFrame, extend } from 'react-three-fiber'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\r\nimport { SavePass } from 'three/examples/jsm/postprocessing/SavePass'\r\nimport { CopyShader } from 'three/examples/jsm/shaders/CopyShader'\r\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\n\r\nextend({ EffectComposer, ShaderPass, SavePass, RenderPass })\r\n\r\n// Shader that composites the r,g,b channels of 3 textures, respectively\r\nconst triColorMix = {\r\n  uniforms: {\r\n    tDiffuse1: { value: null },\r\n    tDiffuse2: { value: null },\r\n    tDiffuse3: { value: null }\r\n  },\r\n  vertexShader: `\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);\r\n    }\r\n  `,\r\n  fragmentShader: `\r\n    varying vec2 vUv;\r\n    uniform sampler2D tDiffuse1;\r\n    uniform sampler2D tDiffuse2;\r\n    uniform sampler2D tDiffuse3;\r\n    \r\n    void main() {\r\n      vec4 del0 = texture2D(tDiffuse1, vUv);\r\n      vec4 del1 = texture2D(tDiffuse2, vUv);\r\n      vec4 del2 = texture2D(tDiffuse3, vUv);\r\n      float alpha = min(min(del0.a, del1.a), del2.a);\r\n      gl_FragColor = vec4(del0.r, del1.g, del2.b, alpha);\r\n    }\r\n  `\r\n}\r\n\r\nexport function Effects() {\r\n  const composer = useRef()\r\n  const savePass = useRef()\r\n  const blendPass = useRef()\r\n  const swap = useRef(false) // Whether to swap the delay buffers\r\n  const { scene, gl, size, camera } = useThree()\r\n  const { rtA, rtB } = useMemo(() => {\r\n    const rtA = new THREE.WebGLRenderTarget(size.width, size.height)\r\n    const rtB = new THREE.WebGLRenderTarget(size.width, size.height)\r\n    return { rtA, rtB }\r\n  }, [size])\r\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\r\n  useFrame(() => {\r\n    // Swap render targets and update dependencies\r\n    let delay1 = swap.current ? rtB : rtA\r\n    let delay2 = swap.current ? rtA : rtB\r\n    savePass.current.renderTarget = delay2\r\n    blendPass.current.uniforms['tDiffuse2'].value = delay1.texture\r\n    blendPass.current.uniforms['tDiffuse3'].value = delay2.texture\r\n    swap.current = !swap.current\r\n    composer.current.render()\r\n  }, 1)\r\n  const pixelRatio = gl.getPixelRatio()\r\n  return (\r\n    <effectComposer ref={composer} args={[gl]}>\r\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\r\n      <shaderPass attachArray=\"passes\" ref={blendPass} args={[triColorMix, 'tDiffuse1']} needsSwap={false} />\r\n      <savePass attachArray=\"passes\" ref={savePass} needsSwap={true} />\r\n      <shaderPass\r\n        attachArray=\"passes\"\r\n        args={[FXAAShader]}\r\n        uniforms-resolution-value-x={1 / (size.width * pixelRatio)}\r\n        uniforms-resolution-value-y={1 / (size.height * pixelRatio)}\r\n      />\r\n      <shaderPass attachArray=\"passes\" args={[CopyShader]} />\r\n    </effectComposer>\r\n  )\r\n}\r\n","import React, { useMemo, useRef } from 'react'\r\nimport { Canvas, useFrame } from 'react-three-fiber'\r\nimport { HTML } from \"@react-three/drei\";\r\nimport { Effects } from './Effects'\r\nimport * as THREE from 'three'\r\nimport './../App.css';\r\n\r\nconst roundedSquareWave = (t, delta, a, f) => {\r\n  return ((2 * a) / Math.PI) * Math.atan(Math.sin(2 * Math.PI * t * f) / delta)\r\n}\r\n\r\nfunction Dots() {\r\n  const ref = useRef()\r\n  const { vec, transform, positions, distances } = useMemo(() => {\r\n    const vec = new THREE.Vector3()\r\n    const transform = new THREE.Matrix4()\r\n\r\n    // Precompute randomized initial positions\r\n    const positions = [...Array(10000)].map((_, i) => {\r\n      const position = new THREE.Vector3()\r\n      // Place in a grid\r\n      position.x = (i % 100) - 50\r\n      position.y = Math.floor(i / 100) - 50\r\n\r\n      // Offset every other column (hexagonal pattern)\r\n      position.y += (i % 2) * 0.5\r\n\r\n      // Add some noise\r\n      position.x += Math.random() * 0.3\r\n      position.y += Math.random() * 0.3\r\n      return position\r\n    })\r\n\r\n    // Precompute initial distances with octagonal offset\r\n    const right = new THREE.Vector3(1, 0, 0)\r\n    const distances = positions.map((pos) => {\r\n      return pos.length() + Math.cos(pos.angleTo(right) * 8) * 0.5\r\n    })\r\n    return { vec, transform, positions, distances }\r\n  }, [])\r\n  useFrame(({ clock }) => {\r\n    for (let i = 0; i < 10000; ++i) {\r\n      const dist = distances[i]\r\n\r\n      // Distance affects the wave phase\r\n      const t = clock.elapsedTime - dist / 25\r\n\r\n      // Oscillates between -0.4 and +0.4\r\n      const wave = roundedSquareWave(t, 0.15 + (0.2 * dist) / 72, 0.4, 1 / 3.8)\r\n\r\n      // Scale initial position by our oscillator\r\n      vec.copy(positions[i]).multiplyScalar(wave + 1.3)\r\n\r\n      // Apply the Vector3 to a Matrix4\r\n      transform.setPosition(vec)\r\n\r\n      // Update Matrix4 for this instance\r\n      ref.current.setMatrixAt(i, transform)\r\n    }\r\n    ref.current.instanceMatrix.needsUpdate = true\r\n  })\r\n  return (\r\n    <instancedMesh ref={ref} args={[null, null, 10000]}>\r\n      <circleBufferGeometry args={[0.15]} />\r\n      <meshBasicMaterial />\r\n    </instancedMesh>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction AboutUs() {\r\n    return (\r\n      <Canvas orthographic camera={{ zoom: 20 }} colorManagement={false}>\r\n        <color attach=\"background\" args={['black']} />\r\n        <group position={[25,-12,0]}>\r\n        <Effects />        \r\n        <HTML fullscreen>\r\n            <h1 style={{\"color\":\"white\"}}>Universe</h1>\r\n        </HTML>\r\n        </group>\r\n        <Dots />\r\n      </Canvas>\r\n    )\r\n  }\r\n  \r\n  export default AboutUs;\r\n\r\n","import { HashRouter, BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Container, Navbar, Nav, Col, Row } from 'react-bootstrap';\n\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport HomeComponent from './components/HomeComponent';\nimport NavBar from './components/NavBar';\nimport One from './components/One';\nimport AboutUs from './components/AboutUs';\n\nfunction App() {\n  return (\n    <HashRouter>\n    <Container>\n      <NavBar />\n      <Switch>\n        <Route path=\"/\" exact component= { (props) => ( <HomeComponent  /> )} />\n        <Route path=\"/one\" component={(props) => ( <One /> )} />     \n        <Route path=\"/aboutus\" component={(props) => ( <AboutUs /> )} />           \n      </Switch>\n    </Container>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}